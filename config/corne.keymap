/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | LSHIFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | LWIN |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT  |
            //                    | LCTRL | LWR | SPC |   | ENT | RSE  | ESC |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I     &kp O      &kp P    &kp BSPC
&kp LSHFT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K     &kp L      &kp SQT  &kp RSHFT
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp SEMI  &kp COMMA  &kp DOT  &kp RALT
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp ESC
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC           &kp F1  &kp F2     &kp F3        &kp F4        &kp F5        &kp APOS   &trans    &kp UP    &trans     &trans     &kp BSPC
&kp LSHFT         &kp F6  &kp LSHFT  &kp LALT      &kp LGUI      &kp F6        &kp GRAVE  &kp LEFT  &kp DOWN  &kp RIGHT  &kp GRAVE  &trans
&kp LEFT_CONTROL  &trans  &trans     &kp K_VOL_DN  &kp K_VOL_UP  &kp K_MUTE    &trans     &trans    &trans    &trans     &trans     &kp RCTRL
                                     &kp LGUI      &trans        &kp SPACE     &kp RET    &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp TILDE  &kp AT  &kp HASH  &kp LS(DQT)   &kp SQT          &kp LS(PLUS)  &kp N1  &kp N2  &kp N3  &kp FSLH       &kp BSPC
&kp LSHFT  &trans     &trans  &kp DOT   &kp LS(EXCL)  &kp LS(QMARK)    &kp MINUS     &kp N4  &kp N5  &kp N6  &kp STAR       &kp RET
&kp LGUI   &trans     &trans  &trans    &kp LT        &kp GT           &kp DOT       &kp N7  &kp N8  &kp N9  &kp LS(PRCNT)  &kp EQUAL
                              &kp LALT  &trans        &kp SPACE        &kp RET       &trans  &kp N0
            >;
        };

        layer_3 {
            bindings = <
&trans      &trans        &trans        &trans        &trans         &trans          &kp BSLH      &kp LBKT      &kp RBKT      &kp FSLH  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_SEL 4    &kp LS(AMPS)  &kp LS(LBRC)  &kp LS(RBRC)  &kp UP    &trans  &kp RSHFT
&kp LGUI    &trans        &trans        &trans        &kp LS(COLON)  &trans          &kp MINUS     &kp LS(LPAR)  &kp LS(RPAR)  &kp DOWN  &trans  &kp LALT
                                        &kp LCTRL     &trans         &kp SPACE       &kp RET       &trans        &kp DOWN
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        layer_3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
